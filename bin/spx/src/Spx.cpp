// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Spx
#include <Spx.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_4e9c4efc065e1637_6_main,"Spx","main",0x7c57286c,"Spx.main","Spx.hx",6,0xfbf4c883)
static const ::String _hx_array_data_003f5d1b_1[] = {
	HX_("run",4b,e7,56,00),
};

void Spx_obj::__construct() { }

Dynamic Spx_obj::__CreateEmpty() { return new Spx_obj; }

void *Spx_obj::_hx_vtable = 0;

Dynamic Spx_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Spx_obj > _hx_result = new Spx_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Spx_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7ee3a1af;
}

void Spx_obj::main(){
            	HX_STACKFRAME(&_hx_pos_4e9c4efc065e1637_6_main)
HXDLIN(   6)		::Sys_obj::exit(::Sys_obj::command(HX_("haxelib",df,b6,80,08),::Array_obj< ::String >::fromData( _hx_array_data_003f5d1b_1,1)->concat(::Sys_obj::args())));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Spx_obj,main,(void))


Spx_obj::Spx_obj()
{
}

bool Spx_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Spx_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Spx_obj_sStaticStorageInfo = 0;
#endif

::hx::Class Spx_obj::__mClass;

static ::String Spx_obj_sStaticFields[] = {
	HX_("main",39,38,56,48),
	::String(null())
};

void Spx_obj::__register()
{
	Spx_obj _hx_dummy;
	Spx_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Spx",1b,5d,3f,00);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Spx_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Spx_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Spx_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Spx_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Spx_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

